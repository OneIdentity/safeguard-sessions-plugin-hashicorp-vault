[hashicorp]
# The address or hostname of the Hashicorp Vault.
# A list of address can be configured separated by ','
; address=<address>

# Port of the Hashicorp Vault.
# Default is 8200.
; port=8200

# The authentication method to use to connect
# to the vault.
# Values can be ldap, userpass
; authentication_method=<authentication_method>

# Defines which credentials to use
# Possible values are: explicit or gateway
# In case of explicit the username and password need to be configured
# Default is gateway
; use_credential=gateway

# The username used to authenticate with
; username=<username>

# Delimiter character to use for parsing secret field from user defined secret path
# E.g. if delimiter is ":" then user may type kv/secret:password and the path shall
# be kv/secret and the field name shall be password.
# Delimiter can be redefined on the fly by the user by starting the path with a single
# character element. E.g. /;/kv/secret;password
; delimiter=

# The password used to authenticate with
; password=<password>

# From which value field to retrieve the password secret from, unless user defined.
# Default is password
;password_field=password

# From which value field to retrieve the SSH private key secret from, unless user
# defined. Default is key
;key_field=key

[engine-kv-v1]
# Path of endpoint where the users and passwords are stored as secrets (key: username,
# field: password/key). This can be overruled by asking the user and filling the "vp"
# key in an AA plugin in the same connection policy. See [question_1] parameter
# in any official AA plugin tutorial.
# e.g. secrets/users
; secrets_path=<path>

###### Common plugin options ######
# To enable or change a parameter, uncomment its line by removing the ';'
# character and replacing the right side of '=' with the desired value.
# If the parameter has the following structure
# ; name=<value>
# then the related option is turned off until you replace '<value>'.
#
# If the parameter has the following structure
# ; name=value
# then the related option is is automatically turned on with the default value
# of 'value'.
#
# To handle sensitive data, you can use a local Credential Store to retrieve
# parameters from.
# Enter the name of the local Credential Store (Policies > Credential Store) as
# the value of the 'name' parameter in section [credential_store]. To retrieve a
# parameter from this Credential Store, type the $ character as the value of
# a parameter in this configuration file. To use the $ character as value,
# type $$ instead. For more information, read the "Store sensitive plugin data
# securely" section in the Tutorial document.

[credential_store]
# Name of the local credential store configured in SPS for hosting sensitive
# configuration data. For more information, read the "Store sensitive
# plugin data securely" section in the Tutorial document.
; name=<name-of-credential-store-policy-that-hosts-sensitive-data>

[logging]
# To configure the log level, enter one of the following values:
# 'debug', 'info', 'warning', 'error', 'critical'
; log_level=info

[https_proxy]
# To set the HTTPS proxy environment for the plugin, configure the following.
; server=<proxy-server-name-or-ip>
; port=3128

[check-in-trigger]
# The check-in-trigger selects when the credentials are checked in. The choices
# are 'session-ended' or 'authentication-completed'. The 'default' parameter
# applies to all protocols, but may be overruled per protocol.
; default=session-ended
; rdp=session-ended
; ssh=session-ended
; telnet=session-ended
